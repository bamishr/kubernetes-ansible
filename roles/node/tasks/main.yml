---
- name: Copy kubelet-service file
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    owner: root
    group: root
    mode: 0644
  register: kubelet_service

- name: Create kubernetes manifest config directory
  file:
    path: "{{ manifest_config_dir }}"
    state: directory
  register: manifest

- name: Create kubernetes config directory
  file:
    path: "{{ kube_config_dir }}"
    state: directory
  register: config_dir

- name: copy openssl conf file to create certificate
  template: src="openssl.conf.j2" dest={{ cert_dir }}/openssl.conf

- name: create node certificate
  command: "{{ item }}"
  with_items:
    - "openssl genrsa -out {{ cert_dir }}/node-{{ ansible_hostname }}-key.pem 2048"
    - "openssl req -new -key {{ cert_dir }}/node-{{ ansible_hostname }}-key.pem -out {{ cert_dir }}/node-{{ ansible_hostname }}.csr -subj '/CN=system:node:{{ ansible_hostname }}/O=system:nodes'"
    - "openssl x509 -req -in {{ cert_dir }}/node-{{ ansible_hostname }}.csr -CA {{ cert_dir }}/ca.pem -CAkey {{ cert_dir }}/ca-key.pem -CAcreateserial -out {{ cert_dir }}/node-{{ ansible_hostname }}.pem -days 3666 -extfile {{ cert_dir }}/openssl.conf"
  register: kubelet_certs

- name: Copy kubeadmin config file
  template:
    src: kubeadminconfig.j2
    dest: "{{ kube_config_dir }}/kubeadminconfig"
  register: config

- name: Copy kubelet config file
  template:
    src: kubelet.j2
    dest: "{{ kube_config_dir }}/kubelet"
  register: kubelet_conf

- name: Copy kubelet.yaml
  template:
    src: kubelet.yaml.j2
    dest: "{{ kube_config_dir }}/kubelet.yaml"
  register: kubelet_yaml

- name: Copy kubelet.conf
  template:
    src: kubelet.conf.j2
    dest: "{{ kube_config_dir }}/kubelet.conf"

- name: Copy kubectl binary and kubelet binary download script
  copy:
    src: getkube.sh
    dest: /opt/getkube.sh

- name: Download k8s binary
  shell: "bash /opt/getkube.sh {{ k8s_version }} NODE"
  
- name: Create kubelet directory
  file:
    path: /var/lib/kubelet
    state: directory
  
- name: Start and enable kubelet on node
  service:
    name: kubelet
    enabled: yes
    state: started
    daemon_reload: yes
  register: kubelet_start_node

- name: Restart kubelet after config changes
  service:
    name: kubelet
    state: restarted
  when: openssl_cert is changed or kubelet_service is changed or kubelet_conf is changed or kubelet_certs is changed or kubelet_yaml is changed
